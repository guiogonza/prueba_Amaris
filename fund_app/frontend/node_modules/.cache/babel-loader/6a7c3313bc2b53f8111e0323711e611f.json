{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guiog\\\\Documents\\\\amaris\\\\fund_app\\\\frontend\\\\src\\\\components\\\\TransactionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, ListGroup, Button, Alert, Badge, Form } from 'react-bootstrap';\nimport Autosuggest from 'react-autosuggest';\nimport log from 'loglevel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlog.setLevel('debug');\nconst TransactionsList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/all_transactions');\n        log.debug('Transactions data:', response.data); // Verifica la estructura de los datos aquí\n        setTransactions(response.data);\n        setFilteredTransactions(response.data);\n      } catch (error) {\n        log.error('Error fetching transactions:', error);\n      }\n    };\n    const fetchClients = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/clients');\n        log.debug('Clients data:', response.data);\n        setClients(response.data);\n      } catch (error) {\n        log.error('Error fetching clients:', error);\n      }\n    };\n    fetchTransactions();\n    fetchClients();\n  }, []);\n  const filterTransactions = clientName => {\n    if (clientName === '') {\n      setFilteredTransactions(transactions);\n    } else {\n      const client = clients.find(c => c.Name.toLowerCase() === clientName.toLowerCase());\n      if (client) {\n        setFilteredTransactions(transactions.filter(txn => txn.ClientID === client.ClienteId));\n      } else {\n        setFilteredTransactions([]);\n      }\n    }\n  };\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSuggestions(getSuggestions(value));\n  };\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n  const getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0 ? [] : clients.filter(client => client.Name.toLowerCase().slice(0, inputLength) === inputValue);\n  };\n  const getSuggestionValue = suggestion => suggestion.Name;\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion.Name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n  const handleChange = (event, {\n    newValue\n  }) => {\n    setSearchTerm(newValue);\n  };\n  const handleSelect = (event, {\n    suggestion\n  }) => {\n    filterTransactions(suggestion.Name);\n  };\n  const deleteTransaction = async transactionId => {\n    try {\n      await axios.delete(`http://localhost:5000/transaction/${transactionId}`);\n      setTransactions(transactions.filter(txn => txn.TransaccionId !== transactionId));\n      setFilteredTransactions(filteredTransactions.filter(txn => txn.TransaccionId !== transactionId));\n      setMessage('Transacción eliminada con éxito.');\n    } catch (error) {\n      log.error('Error deleting transaction:', error);\n      setMessage('Error eliminando la transacción.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Transacciones \", /*#__PURE__*/_jsxDEV(Badge, {\n        variant: \"secondary\",\n        children: filteredTransactions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Buscar Cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: {\n          placeholder: 'Nombre del cliente',\n          value: searchTerm,\n          onChange: handleChange\n        },\n        onSuggestionSelected: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: filteredTransactions.map(txn => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cliente ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), \" \", txn.ClientID, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tipo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), \" \", txn.Type, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fondo ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \" \", txn.FundID, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Monto:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), \" \", txn.Amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => deleteTransaction(txn.TransaccionId),\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Eliminar Transacci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, txn.TransaccionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsList, \"oY9fxdWdgPGaY2+DcJ6nneFz1pI=\");\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","ListGroup","Button","Alert","Badge","Form","Autosuggest","log","jsxDEV","_jsxDEV","setLevel","TransactionsList","_s","transactions","setTransactions","clients","setClients","filteredTransactions","setFilteredTransactions","searchTerm","setSearchTerm","suggestions","setSuggestions","message","setMessage","fetchTransactions","response","get","debug","data","error","fetchClients","filterTransactions","clientName","client","find","c","Name","toLowerCase","filter","txn","ClientID","ClienteId","onSuggestionsFetchRequested","value","getSuggestions","onSuggestionsClearRequested","inputValue","trim","inputLength","length","slice","getSuggestionValue","suggestion","renderSuggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","event","newValue","handleSelect","deleteTransaction","transactionId","delete","TransaccionId","variant","Group","Label","inputProps","placeholder","onChange","onSuggestionSelected","map","Item","Type","FundID","Amount","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/guiog/Documents/amaris/fund_app/frontend/src/components/TransactionsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, Button, Alert, Badge, Form } from 'react-bootstrap';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport log from 'loglevel';\r\n\r\nlog.setLevel('debug');\r\n\r\nconst TransactionsList = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/all_transactions');\r\n        log.debug('Transactions data:', response.data);  // Verifica la estructura de los datos aquí\r\n        setTransactions(response.data);\r\n        setFilteredTransactions(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching transactions:', error);\r\n      }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        log.debug('Clients data:', response.data);\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const filterTransactions = (clientName) => {\r\n    if (clientName === '') {\r\n      setFilteredTransactions(transactions);\r\n    } else {\r\n      const client = clients.find(c => c.Name.toLowerCase() === clientName.toLowerCase());\r\n      if (client) {\r\n        setFilteredTransactions(transactions.filter(txn => txn.ClientID === client.ClienteId));\r\n      } else {\r\n        setFilteredTransactions([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0 ? [] : clients.filter(client =>\r\n      client.Name.toLowerCase().slice(0, inputLength) === inputValue\r\n    );\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.Name;\r\n\r\n  const renderSuggestion = (suggestion) => (\r\n    <div>\r\n      {suggestion.Name}\r\n    </div>\r\n  );\r\n\r\n  const handleChange = (event, { newValue }) => {\r\n    setSearchTerm(newValue);\r\n  };\r\n\r\n  const handleSelect = (event, { suggestion }) => {\r\n    filterTransactions(suggestion.Name);\r\n  };\r\n\r\n  const deleteTransaction = async (transactionId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/transaction/${transactionId}`);\r\n      setTransactions(transactions.filter(txn => txn.TransaccionId !== transactionId));\r\n      setFilteredTransactions(filteredTransactions.filter(txn => txn.TransaccionId !== transactionId));\r\n      setMessage('Transacción eliminada con éxito.');\r\n    } catch (error) {\r\n      log.error('Error deleting transaction:', error);\r\n      setMessage('Error eliminando la transacción.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Transacciones <Badge variant=\"secondary\">{filteredTransactions.length}</Badge></h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <Form.Group>\r\n        <Form.Label>Buscar Cliente</Form.Label>\r\n        <Autosuggest\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={{\r\n            placeholder: 'Nombre del cliente',\r\n            value: searchTerm,\r\n            onChange: handleChange\r\n          }}\r\n          onSuggestionSelected={handleSelect}\r\n        />\r\n      </Form.Group>\r\n      <ListGroup>\r\n        {filteredTransactions.map((txn) => (\r\n          <ListGroup.Item key={txn.TransaccionId}>\r\n            <div>\r\n              <strong>Cliente ID:</strong> {txn.ClientID} <br />\r\n              <strong>Tipo:</strong> {txn.Type} <br />\r\n              <strong>Fondo ID:</strong> {txn.FundID} <br />\r\n              <strong>Monto:</strong> {txn.Amount}\r\n            </div>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => deleteTransaction(txn.TransaccionId)}\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              Eliminar Transacción\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TransactionsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}