{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Form,Button,Container,Alert}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SuscriptionForm=()=>{const[clientId,setClientId]=useState('');const[fundId,setFundId]=useState('');const[amount,setAmount]=useState('');const[clients,setClients]=useState([]);const[funds,setFunds]=useState([]);const[clientExists,setClientExists]=useState(true);useEffect(()=>{const fetchClients=async()=>{try{const response=await axios.get('http://localhost:5000/clients');setClients(response.data);}catch(error){console.error('Error fetching clients:',error);}};const fetchFunds=async()=>{try{const response=await axios.get('http://localhost:5000/funds');setFunds(response.data);}catch(error){console.error('Error fetching funds:',error);}};fetchClients();fetchFunds();},[]);const subscribe=async()=>{try{const response=await axios.post('http://localhost:5000/subscribe',{client_id:clientId,fund_id:fundId,amount});alert(\"Suscripci\\xF3n exitosa: \".concat(response.data.transaction_id));}catch(error){if(error.response.status===400&&error.response.data.message.includes('cliente')){setClientExists(false);}else{alert(error.response.data.message);}}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Suscribirse a un Fondo\"}),!clientExists&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:\"El cliente no existe. Por favor, cree un nuevo cliente.\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Cliente\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:clientId,onChange:e=>setClientId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccione un cliente\"}),clients.map(client=>/*#__PURE__*/_jsx(\"option\",{value:client.ClienteId,children:client.Name},client.ClienteId))]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Fondo\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:fundId,onChange:e=>setFundId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccione un fondo\"}),funds.map(fund=>/*#__PURE__*/_jsxs(\"option\",{value:fund.Id,children:[fund.Nombre,\" - Monto M\\xEDnimo: \",fund.MontoMinimo]},fund.Id))]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Amount\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:amount,onChange:e=>setAmount(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:subscribe,children:\"Suscribirse\"})]})]});};export default SuscriptionForm;","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Button","Container","Alert","jsx","_jsx","jsxs","_jsxs","SuscriptionForm","clientId","setClientId","fundId","setFundId","amount","setAmount","clients","setClients","funds","setFunds","clientExists","setClientExists","fetchClients","response","get","data","error","console","fetchFunds","subscribe","post","client_id","fund_id","alert","concat","transaction_id","status","message","includes","children","variant","Group","Label","Control","as","value","onChange","e","target","map","client","ClienteId","Name","fund","Id","Nombre","MontoMinimo","type","onClick"],"sources":["C:/Users/guiog/Documents/amaris/fund_app/frontend/src/components/SuscriptionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\r\n\r\nconst SuscriptionForm = () => {\r\n  const [clientId, setClientId] = useState('');\r\n  const [fundId, setFundId] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [clients, setClients] = useState([]);\r\n  const [funds, setFunds] = useState([]);\r\n  const [clientExists, setClientExists] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    const fetchFunds = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/funds');\r\n        setFunds(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching funds:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n    fetchFunds();\r\n  }, []);\r\n\r\n  const subscribe = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/subscribe', { client_id: clientId, fund_id: fundId, amount });\r\n      alert(`Suscripción exitosa: ${response.data.transaction_id}`);\r\n    } catch (error) {\r\n      if (error.response.status === 400 && error.response.data.message.includes('cliente')) {\r\n        setClientExists(false);\r\n      } else {\r\n        alert(error.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Suscribirse a un Fondo</h2>\r\n      {!clientExists && <Alert variant=\"danger\">El cliente no existe. Por favor, cree un nuevo cliente.</Alert>}\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Cliente</Form.Label>\r\n          <Form.Control as=\"select\" value={clientId} onChange={(e) => setClientId(e.target.value)}>\r\n            <option value=\"\">Seleccione un cliente</option>\r\n            {clients.map((client) => (\r\n              <option key={client.ClienteId} value={client.ClienteId}>{client.Name}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Fondo</Form.Label>\r\n          <Form.Control as=\"select\" value={fundId} onChange={(e) => setFundId(e.target.value)}>\r\n            <option value=\"\">Seleccione un fondo</option>\r\n            {funds.map((fund) => (\r\n              <option key={fund.Id} value={fund.Id}>{fund.Nombre} - Monto Mínimo: {fund.MontoMinimo}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Amount</Form.Label>\r\n          <Form.Control type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={subscribe}>Suscribirse</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SuscriptionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}