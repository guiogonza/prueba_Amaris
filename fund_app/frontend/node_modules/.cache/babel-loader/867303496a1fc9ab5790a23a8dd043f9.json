{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guiog\\\\Documents\\\\amaris\\\\fund_app\\\\frontend\\\\src\\\\components\\\\ClientsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, ListGroup, Form, Button, Alert } from 'react-bootstrap';\nimport log from 'loglevel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlog.setLevel('debug');\nconst ClientsList = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClientId, setSelectedClientId] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/clients');\n        log.debug('Clients data:', response.data); // Verifica la estructura de los datos aquí\n        setClients(response.data);\n      } catch (error) {\n        log.error('Error fetching clients:', error);\n      }\n    };\n    fetchClients();\n  }, []);\n  const deleteClient = async () => {\n    if (!selectedClientId) {\n      setMessage('Seleccione un cliente para eliminar.');\n      return;\n    }\n    try {\n      await axios.delete(`http://localhost:5000/client/${selectedClientId}`);\n      setClients(clients.filter(client => client.ClienteId !== selectedClientId));\n      setMessage('Cliente eliminado con éxito.');\n      setSelectedClientId(''); // Limpiar selección\n    } catch (error) {\n      log.error('Error deleting client:', error);\n      setMessage('Error eliminando el cliente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Total de Clientes: \", clients.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: clients.map(client => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          name: \"selectedClient\",\n          value: client.ClienteId,\n          onChange: () => setSelectedClientId(client.ClienteId),\n          checked: selectedClientId === client.ClienteId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), \" \", client.ClienteId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), \" \", client.Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), \" \", client.Email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), \" \", client.Phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, client.ClienteId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: deleteClient,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Eliminar Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientsList, \"BgzcLBVuJXANxt5Ql4Sl+i+NHJ4=\");\n_c = ClientsList;\nexport default ClientsList;\nvar _c;\n$RefreshReg$(_c, \"ClientsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","ListGroup","Form","Button","Alert","log","jsxDEV","_jsxDEV","setLevel","ClientsList","_s","clients","setClients","selectedClientId","setSelectedClientId","message","setMessage","fetchClients","response","get","debug","data","error","deleteClient","delete","filter","client","ClienteId","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","map","Item","Check","type","name","value","onChange","checked","Name","Email","Phone","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/guiog/Documents/amaris/fund_app/frontend/src/components/ClientsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, Form, Button, Alert } from 'react-bootstrap';\r\nimport log from 'loglevel';\r\n\r\nlog.setLevel('debug');\r\n\r\nconst ClientsList = () => {\r\n  const [clients, setClients] = useState([]);\r\n  const [selectedClientId, setSelectedClientId] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        log.debug('Clients data:', response.data); // Verifica la estructura de los datos aquí\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const deleteClient = async () => {\r\n    if (!selectedClientId) {\r\n      setMessage('Seleccione un cliente para eliminar.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:5000/client/${selectedClientId}`);\r\n      setClients(clients.filter(client => client.ClienteId !== selectedClientId));\r\n      setMessage('Cliente eliminado con éxito.');\r\n      setSelectedClientId(''); // Limpiar selección\r\n    } catch (error) {\r\n      log.error('Error deleting client:', error);\r\n      setMessage('Error eliminando el cliente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Clientes</h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <h4>Total de Clientes: {clients.length}</h4>\r\n      <ListGroup>\r\n        {clients.map((client) => (\r\n          <ListGroup.Item key={client.ClienteId}>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              name=\"selectedClient\"\r\n              value={client.ClienteId}\r\n              onChange={() => setSelectedClientId(client.ClienteId)}\r\n              checked={selectedClientId === client.ClienteId}\r\n            />\r\n            <div>\r\n              <strong>ID:</strong> {client.ClienteId}<br />\r\n              <strong>Nombre:</strong> {client.Name}<br />\r\n              <strong>Email:</strong> {client.Email}<br />\r\n              <strong>Teléfono:</strong> {client.Phone}\r\n            </div>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n      <Button\r\n        variant=\"danger\"\r\n        onClick={deleteClient}\r\n        style={{ marginTop: '10px' }}\r\n      >\r\n        Eliminar Cliente\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}