{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guiog\\\\Documents\\\\amaris\\\\fund_app\\\\frontend\\\\src\\\\components\\\\ClientsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, ListGroup, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientsList = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClientId, setSelectedClientId] = useState('');\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/clients');\n        setClients(response.data);\n      } catch (error) {\n        console.error('Error fetching clients:', error);\n      }\n    };\n    fetchClients();\n  }, []);\n  const deleteClient = async clientId => {\n    try {\n      await axios.delete(`http://localhost:5000/delete_client`, {\n        params: {\n          client_id: clientId\n        }\n      });\n      setClients(clients.filter(client => client.ClienteId.S !== clientId));\n      alert('Cliente eliminado correctamente.');\n    } catch (error) {\n      alert('Error eliminando cliente.');\n      console.error('Error deleting client:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: clients.map(client => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          label: `ID: ${client.ClienteId.S}\\nNombre: ${client.Name.S}\\nEmail: ${client.Email.S}\\nTeléfono: ${client.Phone.S}`,\n          name: \"clientSelect\",\n          value: client.ClienteId.S,\n          onChange: e => setSelectedClientId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => deleteClient(client.ClienteId.S),\n          disabled: selectedClientId !== client.ClienteId.S,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, client.ClienteId.S, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientsList, \"bnF9mXq6zLLGauUoUONBEbRszBE=\");\n_c = ClientsList;\nexport default ClientsList;\nvar _c;\n$RefreshReg$(_c, \"ClientsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","ListGroup","Button","Form","jsxDEV","_jsxDEV","ClientsList","_s","clients","setClients","selectedClientId","setSelectedClientId","fetchClients","response","get","data","error","console","deleteClient","clientId","delete","params","client_id","filter","client","ClienteId","S","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Item","Check","type","label","Name","Email","Phone","name","value","onChange","e","target","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/guiog/Documents/amaris/fund_app/frontend/src/components/ClientsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, Button, Form } from 'react-bootstrap';\r\n\r\nconst ClientsList = () => {\r\n  const [clients, setClients] = useState([]);\r\n  const [selectedClientId, setSelectedClientId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const deleteClient = async (clientId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/delete_client`, { params: { client_id: clientId } });\r\n      setClients(clients.filter(client => client.ClienteId.S !== clientId));\r\n      alert('Cliente eliminado correctamente.');\r\n    } catch (error) {\r\n      alert('Error eliminando cliente.');\r\n      console.error('Error deleting client:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Clientes</h2>\r\n      <ListGroup>\r\n        {clients.map((client) => (\r\n          <ListGroup.Item key={client.ClienteId.S}>\r\n            <Form.Check \r\n              type=\"radio\" \r\n              label={`ID: ${client.ClienteId.S}\\nNombre: ${client.Name.S}\\nEmail: ${client.Email.S}\\nTeléfono: ${client.Phone.S}`} \r\n              name=\"clientSelect\" \r\n              value={client.ClienteId.S} \r\n              onChange={(e) => setSelectedClientId(e.target.value)}\r\n            />\r\n            <Button \r\n              variant=\"danger\" \r\n              onClick={() => deleteClient(client.ClienteId.S)} \r\n              disabled={selectedClientId !== client.ClienteId.S}\r\n            >\r\n              Eliminar\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}