{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guiog\\\\Documents\\\\amaris\\\\fund_app\\\\frontend\\\\src\\\\components\\\\UnsubscriptionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnsubscriptionForm = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [fundId, setFundId] = useState('');\n  const [clients, setClients] = useState([]);\n  const [clientFunds, setClientFunds] = useState([]);\n  const [funds, setFunds] = useState([]);\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/clients');\n        setClients(response.data);\n      } catch (error) {\n        console.error('Error fetching clients:', error);\n      }\n    };\n    const fetchFunds = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/funds');\n        setFunds(response.data);\n      } catch (error) {\n        console.error('Error fetching funds:', error);\n      }\n    };\n    fetchClients();\n    fetchFunds();\n  }, []);\n  const fetchClientFunds = async clientId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/client_funds?client_id=${clientId}`);\n      setClientFunds(response.data);\n    } catch (error) {\n      console.error('Error fetching client funds:', error);\n    }\n  };\n  const handleClientChange = e => {\n    const clientId = e.target.value;\n    setUserId(clientId);\n    fetchClientFunds(clientId);\n  };\n  const unsubscribe = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/unsubscribe', {\n        client_id: userId,\n        fund_id: fundId\n      });\n      alert(`Cancelaci贸n exitosa: ${response.data.transaction_id}`);\n      setClientFunds(clientFunds.filter(fund => fund.FundID !== fundId));\n      setFundId('');\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n  const getFundName = fundId => {\n    const fund = funds.find(f => f.Id === fundId);\n    return fund ? fund.Nombre : 'Desconocido';\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cancelar Suscripci\\xF3n de un Fondo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: userId,\n          onChange: handleClientChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione un cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), clients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: client.ClienteId,\n            children: client.Name\n          }, client.ClienteId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Fondo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: fundId,\n          onChange: e => setFundId(e.target.value),\n          disabled: !userId,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione un fondo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), clientFunds.map(fund => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: fund.FundID,\n            children: getFundName(fund.FundID)\n          }, fund.FundID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: unsubscribe,\n        disabled: !fundId,\n        children: \"Cancelar Suscripci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(UnsubscriptionForm, \"IK0mbwlXtervUSrlyUnrZoaSjH4=\");\n_c = UnsubscriptionForm;\nexport default UnsubscriptionForm;\nvar _c;\n$RefreshReg$(_c, \"UnsubscriptionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Button","Container","jsxDEV","_jsxDEV","UnsubscriptionForm","_s","userId","setUserId","fundId","setFundId","clients","setClients","clientFunds","setClientFunds","funds","setFunds","fetchClients","response","get","data","error","console","fetchFunds","fetchClientFunds","clientId","handleClientChange","e","target","value","unsubscribe","post","client_id","fund_id","alert","transaction_id","filter","fund","FundID","message","getFundName","find","f","Id","Nombre","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","Control","as","onChange","map","client","ClienteId","Name","disabled","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/guiog/Documents/amaris/fund_app/frontend/src/components/UnsubscriptionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nconst UnsubscriptionForm = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [fundId, setFundId] = useState('');\r\n  const [clients, setClients] = useState([]);\r\n  const [clientFunds, setClientFunds] = useState([]);\r\n  const [funds, setFunds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    const fetchFunds = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/funds');\r\n        setFunds(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching funds:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n    fetchFunds();\r\n  }, []);\r\n\r\n  const fetchClientFunds = async (clientId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/client_funds?client_id=${clientId}`);\r\n      setClientFunds(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching client funds:', error);\r\n    }\r\n  };\r\n\r\n  const handleClientChange = (e) => {\r\n    const clientId = e.target.value;\r\n    setUserId(clientId);\r\n    fetchClientFunds(clientId);\r\n  };\r\n\r\n  const unsubscribe = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/unsubscribe', { client_id: userId, fund_id: fundId });\r\n      alert(`Cancelaci贸n exitosa: ${response.data.transaction_id}`);\r\n      setClientFunds(clientFunds.filter(fund => fund.FundID !== fundId));\r\n      setFundId('');\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const getFundName = (fundId) => {\r\n    const fund = funds.find(f => f.Id === fundId);\r\n    return fund ? fund.Nombre : 'Desconocido';\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Cancelar Suscripci贸n de un Fondo</h2>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Cliente</Form.Label>\r\n          <Form.Control as=\"select\" value={userId} onChange={handleClientChange}>\r\n            <option value=\"\">Seleccione un cliente</option>\r\n            {clients.map((client) => (\r\n              <option key={client.ClienteId} value={client.ClienteId}>{client.Name}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Fondo</Form.Label>\r\n          <Form.Control as=\"select\" value={fundId} onChange={(e) => setFundId(e.target.value)} disabled={!userId}>\r\n            <option value=\"\">Seleccione un fondo</option>\r\n            {clientFunds.map((fund) => (\r\n              <option key={fund.FundID} value={fund.FundID}>{getFundName(fund.FundID)}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button variant=\"danger\" onClick={unsubscribe} disabled={!fundId}>Cancelar Suscripci贸n</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UnsubscriptionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}