{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guiog\\\\Documents\\\\amaris\\\\fund_app\\\\frontend\\\\src\\\\components\\\\ClientsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, ListGroup, Button, Alert, Badge, Form } from 'react-bootstrap';\nimport Autocomplete from 'react-autocomplete';\nimport log from 'loglevel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlog.setLevel('debug');\nconst TransactionsList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedClient, setSelectedClient] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/all_transactions');\n        log.debug('Transactions data:', response.data); // Verifica la estructura de los datos aquí\n        setTransactions(response.data);\n        setFilteredTransactions(response.data);\n      } catch (error) {\n        log.error('Error fetching transactions:', error);\n      }\n    };\n    const fetchClients = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/clients');\n        log.debug('Clients data:', response.data);\n        setClients(response.data);\n      } catch (error) {\n        log.error('Error fetching clients:', error);\n      }\n    };\n    fetchTransactions();\n    fetchClients();\n  }, []);\n  const filterTransactions = clientName => {\n    if (clientName === '') {\n      setFilteredTransactions(transactions);\n    } else {\n      const client = clients.find(c => c.Name.toLowerCase() === clientName.toLowerCase());\n      if (client) {\n        setFilteredTransactions(transactions.filter(txn => txn.ClientID === client.ClienteId));\n      } else {\n        setFilteredTransactions([]);\n      }\n    }\n  };\n  const handleSelect = value => {\n    setSelectedClient(value);\n    filterTransactions(value);\n  };\n  const deleteTransaction = async transactionId => {\n    try {\n      await axios.delete(`http://localhost:5000/transaction/${transactionId}`);\n      setTransactions(transactions.filter(txn => txn.TransaccionId !== transactionId));\n      setFilteredTransactions(filteredTransactions.filter(txn => txn.TransaccionId !== transactionId));\n      setMessage('Transacción eliminada con éxito.');\n    } catch (error) {\n      log.error('Error deleting transaction:', error);\n      setMessage('Error eliminando la transacción.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Transacciones \", /*#__PURE__*/_jsxDEV(Badge, {\n        variant: \"secondary\",\n        children: filteredTransactions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Buscar Cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        getItemValue: item => item.Name,\n        items: clients,\n        renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: isHighlighted ? 'lightgray' : 'white'\n          },\n          children: item.Name\n        }, item.ClienteId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this),\n        value: selectedClient,\n        onChange: e => setSearchTerm(e.target.value),\n        onSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: filteredTransactions.map(txn => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cliente ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), \" \", txn.ClientID, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tipo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), \" \", txn.Type, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fondo ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" \", txn.FundID, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Monto:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), \" \", txn.Amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => deleteTransaction(txn.TransaccionId),\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Eliminar Transacci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, txn.TransaccionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsList, \"UaFl5Lgt3Prg6wFElIL9/NRcJLA=\");\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","ListGroup","Button","Alert","Badge","Form","Autocomplete","log","jsxDEV","_jsxDEV","setLevel","TransactionsList","_s","transactions","setTransactions","clients","setClients","filteredTransactions","setFilteredTransactions","searchTerm","setSearchTerm","selectedClient","setSelectedClient","message","setMessage","fetchTransactions","response","get","debug","data","error","fetchClients","filterTransactions","clientName","client","find","c","Name","toLowerCase","filter","txn","ClientID","ClienteId","handleSelect","value","deleteTransaction","transactionId","delete","TransaccionId","children","variant","length","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","getItemValue","item","items","renderItem","isHighlighted","style","background","onChange","e","target","onSelect","map","Item","Type","FundID","Amount","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/guiog/Documents/amaris/fund_app/frontend/src/components/ClientsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, Button, Alert, Badge, Form } from 'react-bootstrap';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport log from 'loglevel';\r\n\r\nlog.setLevel('debug');\r\n\r\nconst TransactionsList = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedClient, setSelectedClient] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/all_transactions');\r\n        log.debug('Transactions data:', response.data);  // Verifica la estructura de los datos aquí\r\n        setTransactions(response.data);\r\n        setFilteredTransactions(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching transactions:', error);\r\n      }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        log.debug('Clients data:', response.data);\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const filterTransactions = (clientName) => {\r\n    if (clientName === '') {\r\n      setFilteredTransactions(transactions);\r\n    } else {\r\n      const client = clients.find(c => c.Name.toLowerCase() === clientName.toLowerCase());\r\n      if (client) {\r\n        setFilteredTransactions(transactions.filter(txn => txn.ClientID === client.ClienteId));\r\n      } else {\r\n        setFilteredTransactions([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelect = (value) => {\r\n    setSelectedClient(value);\r\n    filterTransactions(value);\r\n  };\r\n\r\n  const deleteTransaction = async (transactionId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/transaction/${transactionId}`);\r\n      setTransactions(transactions.filter(txn => txn.TransaccionId !== transactionId));\r\n      setFilteredTransactions(filteredTransactions.filter(txn => txn.TransaccionId !== transactionId));\r\n      setMessage('Transacción eliminada con éxito.');\r\n    } catch (error) {\r\n      log.error('Error deleting transaction:', error);\r\n      setMessage('Error eliminando la transacción.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Transacciones <Badge variant=\"secondary\">{filteredTransactions.length}</Badge></h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <Form.Group>\r\n        <Form.Label>Buscar Cliente</Form.Label>\r\n        <Autocomplete\r\n          getItemValue={(item) => item.Name}\r\n          items={clients}\r\n          renderItem={(item, isHighlighted) =>\r\n            <div key={item.ClienteId} style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n              {item.Name}\r\n            </div>\r\n          }\r\n          value={selectedClient}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          onSelect={handleSelect}\r\n        />\r\n      </Form.Group>\r\n      <ListGroup>\r\n        {filteredTransactions.map((txn) => (\r\n          <ListGroup.Item key={txn.TransaccionId}>\r\n            <div>\r\n              <strong>Cliente ID:</strong> {txn.ClientID} <br />\r\n              <strong>Tipo:</strong> {txn.Type} <br />\r\n              <strong>Fondo ID:</strong> {txn.FundID} <br />\r\n              <strong>Monto:</strong> {txn.Amount}\r\n            </div>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => deleteTransaction(txn.TransaccionId)}\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              Eliminar Transacción\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TransactionsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}