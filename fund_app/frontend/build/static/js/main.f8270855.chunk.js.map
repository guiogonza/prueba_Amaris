{"version":3,"sources":["components/SuscriptionForm.js","components/UnsubscriptionForm.js","components/TransactionsList.js","components/FundsList.js","components/ClientsList.js","components/ClientForm.js","components/Navigation.js","App.js","index.js"],"names":["SuscriptionForm","clientId","setClientId","useState","fundId","setFundId","amount","setAmount","clients","setClients","funds","setFunds","clientExists","setClientExists","message","setMessage","useEffect","async","response","axios","get","data","error","console","fetchClients","fetchFunds","_jsxs","Container","children","_jsx","Alert","variant","Form","Group","Label","Control","as","value","onChange","e","target","map","client","ClienteId","Name","fund","Id","Nombre","MontoMinimo","type","test","Button","onClick","post","client_id","fund_id","alert","concat","transaction_id","status","UnsubscriptionForm","userId","setUserId","clientsWithTransactions","setClientsWithTransactions","clientFunds","setClientFunds","uniqueClientIds","Set","txn","ClientID","fetchClientsWithTransactions","getFundName","find","f","fetchClientFunds","filter","includes","disabled","FundID","log","setLevel","TransactionsList","transactions","setTransactions","filteredTransactions","setFilteredTransactions","searchTerm","setSearchTerm","debug","fetchTransactions","Badge","length","placeholder","trim","filtered","filterTransactions","ListGroup","Item","Type","FundName","Amount","delete","transactionId","updatedTransactions","TransaccionId","deleteTransaction","style","marginTop","FundsList","Categoria","ClientsList","filteredClients","toLowerCase","controlId","marginBottom","Email","Phone","deleteClient","ClientForm","_ref","onClientAdded","name","setName","email","setEmail","phone","setPhone","Navigation","currentView","setCurrentView","handleClientAdded","ButtonGroup","className","renderView","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8270855.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\r\n\r\nconst SuscriptionForm = () => {\r\n  const [clientId, setClientId] = useState('');\r\n  const [fundId, setFundId] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [clients, setClients] = useState([]);\r\n  const [funds, setFunds] = useState([]);\r\n  const [clientExists, setClientExists] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    const fetchFunds = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/funds');\r\n        setFunds(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching funds:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n    fetchFunds();\r\n  }, []);\r\n\r\n  const subscribe = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/subscribe', { client_id: clientId, fund_id: fundId, amount });\r\n      alert(`Suscripción exitosa: ${response.data.transaction_id}`);\r\n      setMessage('');\r\n      // Limpiar los campos del formulario\r\n      setClientId('');\r\n      setFundId('');\r\n      setAmount('');\r\n    } catch (error) {\r\n      if (error.response.status === 400) {\r\n        setMessage(error.response.data.message);\r\n        setClientExists(false);\r\n      } else {\r\n        alert(error.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    const value = e.target.value;\r\n    // Solo permitir números\r\n    if (/^\\d*$/.test(value)) {\r\n      setAmount(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Suscribirse a un Fondo</h2>\r\n      {message && <Alert variant=\"danger\">{message}</Alert>}\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Cliente</Form.Label>\r\n          <Form.Control as=\"select\" value={clientId} onChange={(e) => setClientId(e.target.value)}>\r\n            <option value=\"\">Seleccione un cliente</option>\r\n            {clients.map((client) => (\r\n              <option key={client.ClienteId} value={client.ClienteId}>{client.Name}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Fondo</Form.Label>\r\n          <Form.Control as=\"select\" value={fundId} onChange={(e) => setFundId(e.target.value)}>\r\n            <option value=\"\">Seleccione un fondo</option>\r\n            {funds.map((fund) => (\r\n              <option key={fund.Id} value={fund.Id}>{fund.Nombre} - Monto Mínimo: {fund.MontoMinimo}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Amount</Form.Label>\r\n          <Form.Control type=\"text\" value={amount} onChange={handleAmountChange} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={subscribe}>Suscribirse</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SuscriptionForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nconst UnsubscriptionForm = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [fundId, setFundId] = useState('');\r\n  const [clients, setClients] = useState([]);\r\n  const [clientsWithTransactions, setClientsWithTransactions] = useState([]);\r\n  const [clientFunds, setClientFunds] = useState([]);\r\n  const [funds, setFunds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    const fetchFunds = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/funds');\r\n        setFunds(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching funds:', error);\r\n      }\r\n    };\r\n\r\n    const fetchClientsWithTransactions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/all_transactions');\r\n        const uniqueClientIds = [...new Set(response.data.map(txn => txn.ClientID))];\r\n        setClientsWithTransactions(uniqueClientIds);\r\n      } catch (error) {\r\n        console.error('Error fetching clients with transactions:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n    fetchFunds();\r\n    fetchClientsWithTransactions();\r\n  }, []);\r\n\r\n  const fetchClientFunds = async (clientId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/client_funds?client_id=${clientId}`);\r\n      setClientFunds(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching client funds:', error);\r\n    }\r\n  };\r\n\r\n  const handleClientChange = (e) => {\r\n    const clientId = e.target.value;\r\n    setUserId(clientId);\r\n    fetchClientFunds(clientId);\r\n  };\r\n\r\n  const unsubscribe = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/unsubscribe', { client_id: userId, fund_id: fundId });\r\n      alert(`Cancelación exitosa: ${response.data.transaction_id}`);\r\n      setClientFunds(clientFunds.filter(fund => fund.FundID !== fundId));\r\n      setFundId('');\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const getFundName = (fundId) => {\r\n    const fund = funds.find(f => f.Id === fundId);\r\n    return fund ? fund.Nombre : 'Desconocido';\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Cancelar Suscripción de un Fondo</h2>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Cliente</Form.Label>\r\n          <Form.Control as=\"select\" value={userId} onChange={handleClientChange}>\r\n            <option value=\"\">Seleccione un cliente</option>\r\n            {clients\r\n              .filter(client => clientsWithTransactions.includes(client.ClienteId))\r\n              .map((client) => (\r\n                <option key={client.ClienteId} value={client.ClienteId}>{client.Name}</option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Fondo</Form.Label>\r\n          <Form.Control as=\"select\" value={fundId} onChange={(e) => setFundId(e.target.value)} disabled={!userId}>\r\n            <option value=\"\">Seleccione un fondo</option>\r\n            {clientFunds.map((fund) => (\r\n              <option key={fund.FundID} value={fund.FundID}>{getFundName(fund.FundID)}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button variant=\"danger\" onClick={unsubscribe} disabled={!fundId}>Cancelar Suscripción</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UnsubscriptionForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, Button, Alert, Badge, Form } from 'react-bootstrap';\r\nimport log from 'loglevel';\r\n\r\nlog.setLevel('debug');\r\n\r\nconst TransactionsList = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/all_transactions');\r\n        log.debug('Transactions data:', response.data);  // Verifica la estructura de los datos aquí\r\n        setTransactions(response.data);\r\n        setFilteredTransactions(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching transactions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  const filterTransactions = (clientId) => {\r\n    log.debug('Filtering transactions for Client ID:', clientId);\r\n    if (clientId.trim() === '') {\r\n      setFilteredTransactions(transactions);\r\n    } else {\r\n      const filtered = transactions.filter(txn => txn.ClientID.includes(clientId));\r\n      log.debug('Filtered Transactions:', filtered);\r\n      setFilteredTransactions(filtered);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n    filterTransactions(value);\r\n  };\r\n\r\n  const deleteTransaction = async (transactionId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/transaction/${transactionId}`);\r\n      const updatedTransactions = transactions.filter(txn => txn.TransaccionId !== transactionId);\r\n      setTransactions(updatedTransactions);\r\n      setFilteredTransactions(updatedTransactions);\r\n      setMessage('Transacción eliminada con éxito.');\r\n    } catch (error) {\r\n      log.error('Error deleting transaction:', error);\r\n      setMessage('Error eliminando la transacción.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Transacciones <Badge variant=\"secondary\">{filteredTransactions.length}</Badge></h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <Form.Group>\r\n        <Form.Label>Buscar por Cliente ID</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Ingrese el Cliente ID\"\r\n          value={searchTerm}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <ListGroup>\r\n        {filteredTransactions.map((txn) => (\r\n          <ListGroup.Item key={txn.TransaccionId}>\r\n            <div>\r\n              <strong>Cliente ID:</strong> {txn.ClientID} <br />\r\n              <strong>Tipo:</strong> {txn.Type} <br />\r\n              <strong>Fondo ID:</strong> {txn.FundID} <br />\r\n              <strong>Nombre del Fondo:</strong> {txn.FundName} <br />\r\n              <strong>Monto:</strong> {txn.Amount}\r\n            </div>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => deleteTransaction(txn.TransaccionId)}\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              Eliminar Transacción\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TransactionsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup } from 'react-bootstrap';\r\nimport log from 'loglevel';\r\n\r\nlog.setLevel('debug');\r\n\r\nconst FundsList = () => {\r\n  const [funds, setFunds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFunds = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/funds');\r\n        log.debug('Funds data:', response.data);  // Verifica la estructura de los datos aquí\r\n        setFunds(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching funds:', error);\r\n      }\r\n    };\r\n\r\n    fetchFunds();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Fondos Disponibles</h2>\r\n      <ListGroup>\r\n        {funds.map((fund) => (\r\n          <ListGroup.Item key={fund.Id}>\r\n            <strong>{fund.Nombre}</strong><br />\r\n            ID del Fondo: {fund.Id} <br />\r\n            Monto Mínimo: {fund.MontoMinimo} <br />\r\n            Categoría: {fund.Categoria}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FundsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, Button, Alert, Badge, Form } from 'react-bootstrap';\r\nimport log from 'loglevel';\r\n\r\nlog.setLevel('debug');\r\n\r\nconst ClientsList = () => {\r\n  const [clients, setClients] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/clients');\r\n        log.debug('Clients data:', response.data); // Verifica la estructura de los datos aquí\r\n        setClients(response.data);\r\n      } catch (error) {\r\n        log.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const deleteClient = async (clientId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/client/${clientId}`);\r\n      setClients(clients.filter(client => client.ClienteId !== clientId));\r\n      setMessage('Cliente eliminado con éxito.');\r\n    } catch (error) {\r\n      log.error('Error deleting client:', error);\r\n      setMessage('Error eliminando el cliente.');\r\n    }\r\n  };\r\n\r\n  const filteredClients = clients.filter(client =>\r\n    client.Name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Clientes <Badge variant=\"secondary\">{filteredClients.length}</Badge></h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <Form>\r\n        <Form.Group controlId=\"formSearch\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Buscar por Nombre\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            style={{ marginBottom: '20px' }}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <ListGroup>\r\n        {filteredClients.map((client) => (\r\n          <ListGroup.Item key={client.ClienteId}>\r\n            <div>\r\n              <strong>ID:</strong> {client.ClienteId}<br />\r\n              <strong>Nombre:</strong> {client.Name}<br />\r\n              <strong>Email:</strong> {client.Email}<br />\r\n              <strong>Teléfono:</strong> {client.Phone}\r\n            </div>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => deleteClient(client.ClienteId)}\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              Eliminar Cliente\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientsList;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\r\n\r\nconst ClientForm = ({ onClientAdded }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const addClient = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/client', { name, email, phone });\r\n      setMessage('Cliente creado con éxito.');\r\n      onClientAdded(response.data.client_id, name, email, phone);\r\n      setName('');\r\n      setEmail('');\r\n      setPhone('');\r\n    } catch (error) {\r\n      setMessage('Error creando el cliente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Agregar Cliente</h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Nombre</Form.Label>\r\n          <Form.Control type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Teléfono</Form.Label>\r\n          <Form.Control type=\"text\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={addClient}>Agregar Cliente</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientForm;\r\n","import React, { useState } from 'react';\r\nimport SuscriptionForm from './SuscriptionForm';\r\nimport UnsubscriptionForm from './UnsubscriptionForm';\r\nimport TransactionsList from './TransactionsList';\r\nimport FundsList from './FundsList';\r\nimport ClientsList from './ClientsList';\r\nimport ClientForm from './ClientForm';\r\nimport { Container, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\nconst Navigation = () => {\r\n  const [currentView, setCurrentView] = useState('home');\r\n\r\n  const renderView = () => {\r\n    switch (currentView) {\r\n      case 'subscribe':\r\n        return <SuscriptionForm />;\r\n      case 'unsubscribe':\r\n        return <UnsubscriptionForm />;\r\n      case 'transactions':\r\n        return <TransactionsList />;\r\n      case 'funds':\r\n        return <FundsList />;\r\n      case 'clients':\r\n        return <ClientsList />;\r\n      case 'addClient':\r\n        return <ClientForm onClientAdded={handleClientAdded} />;\r\n      default:\r\n        return <div>Por favor, selecciona una opción</div>;\r\n    }\r\n  };\r\n\r\n  const handleClientAdded = (clientId, name, email, phone) => {\r\n    // Puedes manejar la adición del cliente aquí si es necesario\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Gestión de Fondos</h1>\r\n      <ButtonGroup className=\"mb-3\">\r\n        <Button variant=\"primary\" onClick={() => setCurrentView('subscribe')}>Suscribirse a un Fondo</Button>\r\n        <Button variant=\"danger\" onClick={() => setCurrentView('unsubscribe')}>Cancelar Suscripción</Button>\r\n        <Button variant=\"info\" onClick={() => setCurrentView('transactions')}>Ver Transacciones</Button>\r\n        <Button variant=\"secondary\" onClick={() => setCurrentView('funds')}>Ver Fondos Disponibles</Button>\r\n        <Button variant=\"success\" onClick={() => setCurrentView('clients')}>Ver Clientes</Button>\r\n        <Button variant=\"warning\" onClick={() => setCurrentView('addClient')}>Agregar Cliente</Button>\r\n      </ButtonGroup>\r\n      {renderView()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}